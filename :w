import type { InputProps } from './props';
import { ICON } from '../../css';
import { LabeledInput } from '../../labeled';
import { MagnifyingGlassIcon, PlusIcon } from '@heroicons/react/20/solid';
import { FormButton } from '@/components/form';

/** The style of a {@link React.JSX.IntrinsicElements.button | button}. */
const BUTTON_STYLE = `py-0.5 mx-0 my-1 text-xs` as const;

/** @return a {@link React.JSX.IntrinsicElements.input | input} to gather a `string`. */
export function InputId(props: Omit<InputProps<string>, 'children' | 'disabled'>): React.ReactElement {
	return (
		<LabeledInput
			disabled={true}
			id={props.id}
			inputRef={props.inputRef}
			label={props.label ?? 'Name'}
			onChange={props.onChange}
			required={props.required}
			title={props.title}
			type={props.type}
			value={props.value}
		>
			<FormButton className={BUTTON_STYLE}>
				<PlusIcon className={ICON} /> New
			</FormButton>

			<FormButton className={BUTTON_STYLE}>
				<MagnifyingGlassIcon className={ICON} /> Search
			</FormButton>
		</LabeledInput>
	);
}
